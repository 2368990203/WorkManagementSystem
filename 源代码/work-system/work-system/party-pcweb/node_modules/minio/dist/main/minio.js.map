{"version":3,"sources":["minio.js"],"names":[],"mappings":"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","file":"minio.js","sourcesContent":["/*\n * Minio Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2015 Minio, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs'\nimport Crypto from 'crypto'\nimport Http from 'http'\nimport Https from 'https'\nimport Stream from 'stream'\nimport BlockStream2 from 'block-stream2'\nimport Xml from 'xml'\nimport xml2js from 'xml2js'\nimport async from 'async'\nimport querystring from 'querystring'\nimport mkdirp from 'mkdirp'\nimport path from 'path'\nimport _ from 'lodash'\n\nimport { extractMetadata, prependXAMZMeta, isValidPrefix, isValidEndpoint, isValidBucketName,\n  isValidPort, isValidObjectName, isAmazonEndpoint, getScope,\n  uriEscape, uriResourceEscape, isBoolean, isFunction, isNumber,\n  isString, isObject, isArray, isValidDate, pipesetup,\n  readableStream, isReadableStream, isVirtualHostStyle,\n  makeDateLong, promisify } from './helpers.js'\n\nimport { signV4, presignSignatureV4, postPresignSignatureV4 } from './signing.js'\n\nimport ObjectUploader from './object-uploader'\n\nimport * as transformers from './transformers'\n\nimport * as errors from './errors.js'\n\nimport { getS3Endpoint } from './s3-endpoints.js'\n\nimport { NotificationConfig, NotificationPoller } from './notification'\n\nvar Package = require('../../package.json')\n\nexport class Client {\n  constructor(params) {\n    if (typeof params.secure !== 'undefined') throw new Error('\"secure\" option deprecated, \"useSSL\" should be used instead')\n    // Default values if not specified.\n    if (typeof params.useSSL === 'undefined') params.useSSL = true\n    if (!params.port) params.port = 0\n    // Validate input params.\n    if (!isValidEndpoint(params.endPoint)) {\n      throw new errors.InvalidEndpointError(`Invalid endPoint : ${params.endPoint}`)\n    }\n    if (!isValidPort(params.port)) {\n      throw new errors.InvalidArgumentError(`Invalid port : ${params.port}`)\n    }\n    if (!isBoolean(params.useSSL)) {\n      throw new errors.InvalidArgumentError(`Invalid useSSL flag type : ${params.useSSL}, expected to be of type \"boolean\"`)\n    }\n\n    // Validate region only if its set.\n    if (params.region) {\n      if (!isString(params.region)) {\n        throw new errors.InvalidArgumentError(`Invalid region : ${params.region}`)\n      }\n    }\n\n    var host = params.endPoint.toLowerCase()\n    var port = params.port\n    var protocol = ''\n    var transport\n    // Validate if configuration is not using SSL\n    // for constructing relevant endpoints.\n    if (params.useSSL === false) {\n      transport = Http\n      protocol = 'http:'\n      if (port === 0) {\n        port = 80\n      }\n    } else {\n      // Defaults to secure.\n      transport = Https\n      protocol = 'https:'\n      if (port === 0) {\n        port = 443\n      }\n    }\n\n    // if custom transport is set, use it.\n    if (params.transport) {\n      if (!isObject(params.transport)) {\n        throw new errors.InvalidArgumentError('Invalid transport type : ${params.transport}, expected to be type \"object\"')\n      }\n      transport = params.transport\n    }\n\n    // User Agent should always following the below style.\n    // Please open an issue to discuss any new changes here.\n    //\n    //       Minio (OS; ARCH) LIB/VER APP/VER\n    //\n    var libraryComments = `(${process.platform}; ${process.arch})`\n    var libraryAgent = `Minio ${libraryComments} minio-js/${Package.version}`\n    // User agent block ends.\n\n    this.transport = transport\n    this.host = host\n    this.port = port\n    this.protocol = protocol\n    this.accessKey = params.accessKey\n    this.secretKey = params.secretKey\n    this.sessionToken = params.sessionToken\n    this.userAgent = `${libraryAgent}`\n\n    if (!this.accessKey) this.accessKey = ''\n    if (!this.secretKey) this.secretKey = ''\n    this.anonymous = !this.accessKey || !this.secretKey\n\n    this.regionMap = {}\n    if (params.region) {\n      this.region = params.region\n    }\n\n    this.minimumPartSize = 5*1024*1024\n    this.maximumPartSize = 5*1024*1024*1024\n    this.maxObjectSize = 5*1024*1024*1024*1024\n    // SHA256 is enabled only for authenticated http requests. If the request is authenticated\n    // and the connection is https we use x-amz-content-sha256=UNSIGNED-PAYLOAD\n    // header for signature calculation.\n    this.enableSHA256 = !this.anonymous && !params.useSSL\n\n    this.reqOptions = {}\n  }\n\n  // Sets the supported request options.\n  setRequestOptions(options) {\n    if (!isObject(options)) {\n      throw new TypeError('request options should be of type \"object\"')\n    }\n    this.reqOptions = _.pick(options, ['agent', 'ca', 'cert', 'ciphers', 'clientCertEngine', 'crl', 'dhparam', 'ecdhCurve', 'honorCipherOrder', 'key', 'passphrase', 'pfx', 'rejectUnauthorized', 'secureOptions', 'secureProtocol', 'servername', 'sessionIdContext'])\n  }\n\n  // returns *options* object that can be used with http.request()\n  // Takes care of constructing virtual-host-style or path-style hostname\n  getRequestOptions(opts) {\n    var method = opts.method\n    var region = opts.region\n    var bucketName = opts.bucketName\n    var objectName = opts.objectName\n    var headers = opts.headers\n    var query = opts.query\n\n    var reqOptions = {method}\n    reqOptions.headers = {}\n\n    // Verify if virtual host supported.\n    var virtualHostStyle\n    if (bucketName) {\n      virtualHostStyle = isVirtualHostStyle(this.host,\n                                            this.protocol,\n                                            bucketName)\n    }\n\n    if (this.port) reqOptions.port = this.port\n    reqOptions.protocol = this.protocol\n\n    if (objectName) {\n      objectName = `${uriResourceEscape(objectName)}`\n    }\n\n    reqOptions.path = '/'\n\n    // Save host.\n    reqOptions.host = this.host\n    // For Amazon S3 endpoint, get endpoint based on region.\n    if (isAmazonEndpoint(reqOptions.host)) {\n      reqOptions.host = getS3Endpoint(region)\n    }\n\n    if (virtualHostStyle && !opts.pathStyle) {\n      // For all hosts which support virtual host style, `bucketName`\n      // is part of the hostname in the following format:\n      //\n      //  var host = 'bucketName.example.com'\n      //\n      if (bucketName) reqOptions.host = `${bucketName}.${reqOptions.host}`\n      if (objectName) reqOptions.path = `/${objectName}`\n    } else {\n      // For all S3 compatible storage services we will fallback to\n      // path style requests, where `bucketName` is part of the URI\n      // path.\n      if (bucketName) reqOptions.path = `/${bucketName}`\n      if (objectName) reqOptions.path = `/${bucketName}/${objectName}`\n    }\n\n    if (query) reqOptions.path += `?${query}`\n    reqOptions.headers.host = reqOptions.host\n    if ((reqOptions.protocol === 'http:' && reqOptions.port !== 80) ||\n        (reqOptions.protocol === 'https:' && reqOptions.port !== 443)) {\n      reqOptions.headers.host = `${reqOptions.host}:${reqOptions.port}`\n    }\n    reqOptions.headers['user-agent'] = this.userAgent\n    if (headers) {\n      // have all header keys in lower case - to make signing easy\n      _.map(headers, (v, k) => reqOptions.headers[k.toLowerCase()] = v)\n    }\n\n    // Use any request option specified in minioClient.setRequestOptions()\n    reqOptions = Object.assign({}, this.reqOptions, reqOptions)\n\n    return reqOptions\n  }\n\n  // Set application specific information.\n  //\n  // Generates User-Agent in the following style.\n  //\n  //       Minio (OS; ARCH) LIB/VER APP/VER\n  //\n  // __Arguments__\n  // * `appName` _string_ - Application name.\n  // * `appVersion` _string_ - Application version.\n  setAppInfo(appName, appVersion) {\n    if (!isString(appName)) {\n      throw new TypeError(`Invalid appName: ${appName}`)\n    }\n    if (appName.trim() === '') {\n      throw new errors.InvalidArgumentError('Input appName cannot be empty.')\n    }\n    if (!isString(appVersion)) {\n      throw new TypeError(`Invalid appName: ${appVersion}`)\n    }\n    if (appVersion.trim() === '') {\n      throw new errors.InvalidArgumentError('Input appVersion cannot be empty.')\n    }\n    this.userAgent = `${this.userAgent} ${appName}/${appVersion}`\n  }\n\n  // partSize will be atleast minimumPartSize or a multiple of minimumPartSize\n  // for size <= 50GiB partSize is always 5MiB (10000*5MiB = 50GiB)\n  // for size > 50GiB partSize will be a multiple of 5MiB\n  // for size = 5TiB partSize will be 525MiB\n  calculatePartSize(size) {\n    if (!isNumber(size)) {\n      throw new TypeError('size should be of type \"number\"')\n    }\n    if (size > this.maxObjectSize) {\n      throw new TypeError(`size should not be more than ${this.maxObjectSize}`)\n    }\n    var partSize = Math.ceil(size/10000)\n    partSize = Math.ceil(partSize/this.minimumPartSize) * this.minimumPartSize\n    return partSize\n  }\n\n  // log the request, response, error\n  logHTTP(reqOptions, response, err) {\n    // if no logstreamer available return.\n    if (!this.logStream) return\n    if (!isObject(reqOptions)) {\n      throw new TypeError('reqOptions should be of type \"object\"')\n    }\n    if (response && !isReadableStream(response)) {\n      throw new TypeError('response should be of type \"Stream\"')\n    }\n    if (err && !(err instanceof Error)) {\n      throw new TypeError('err should be of type \"Error\"')\n    }\n    var logHeaders = (headers) => {\n      _.forEach(headers, (v, k) => {\n        if (k == 'authorization') {\n          var redacter = new RegExp('Signature=([0-9a-f]+)')\n          v = v.replace(redacter, 'Signature=**REDACTED**')\n        }\n        this.logStream.write(`${k}: ${v}\\n`)\n      })\n      this.logStream.write('\\n')\n    }\n    this.logStream.write(`REQUEST: ${reqOptions.method} ${reqOptions.path}\\n`)\n    logHeaders(reqOptions.headers)\n    if (response) {\n      this.logStream.write(`RESPONSE: ${response.statusCode}\\n`)\n      logHeaders(response.headers)\n    }\n    if (err) {\n      this.logStream.write('ERROR BODY:\\n')\n      var errJSON = JSON.stringify(err, null, '\\t')\n      this.logStream.write(`${errJSON}\\n`)\n    }\n  }\n\n  // Enable tracing\n  traceOn(stream) {\n    if (!stream) stream = process.stdout\n    this.logStream = stream\n  }\n\n  // Disable tracing\n  traceOff() {\n    this.logStream = null\n  }\n\n  // makeRequest is the primitive used by the apis for making S3 requests.\n  // payload can be empty string in case of no payload.\n  // statusCode is the expected statusCode. If response.statusCode does not match\n  // we parse the XML error and call the callback with the error message.\n  // A valid region is passed by the calls - listBuckets, makeBucket and\n  // getBucketRegion.\n  makeRequest(options, payload, statusCode, region, returnResponse, cb) {\n    if (!isObject(options)) {\n      throw new TypeError('options should be of type \"object\"')\n    }\n    if (!isString(payload) && !isObject(payload)) {\n      // Buffer is of type 'object'\n      throw new TypeError('payload should be of type \"string\" or \"Buffer\"')\n    }\n    if (!isNumber(statusCode)) {\n      throw new TypeError('statusCode should be of type \"number\"')\n    }\n    if (!isString(region)) {\n      throw new TypeError('region should be of type \"string\"')\n    }\n    if (!isBoolean(returnResponse)) {\n      throw new TypeError('returnResponse should be of type \"boolean\"')\n    }\n    if(!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    if (!options.headers) options.headers = {}\n    if (options.method === 'POST' || options.method === 'PUT' || options.method === 'DELETE') {\n      options.headers['content-length'] = payload.length\n    }\n    var sha256sum = ''\n    if (this.enableSHA256) sha256sum = Crypto.createHash('sha256').update(payload).digest('hex')\n    var stream = readableStream(payload)\n    this.makeRequestStream(options, stream, sha256sum, statusCode, region, returnResponse, cb)\n  }\n\n  // makeRequestStream will be used directly instead of makeRequest in case the payload\n  // is available as a stream. for ex. putObject\n  makeRequestStream(options, stream, sha256sum, statusCode, region, returnResponse, cb) {\n    if (!isObject(options)) {\n      throw new TypeError('options should be of type \"object\"')\n    }\n    if (!isReadableStream(stream)) {\n      throw new errors.InvalidArgumentError('stream should be a readable Stream')\n    }\n    if (!isString(sha256sum)) {\n      throw new TypeError('sha256sum should be of type \"string\"')\n    }\n    if (!isNumber(statusCode)) {\n      throw new TypeError('statusCode should be of type \"number\"')\n    }\n    if (!isString(region)) {\n      throw new TypeError('region should be of type \"string\"')\n    }\n    if (!isBoolean(returnResponse)) {\n      throw new TypeError('returnResponse should be of type \"boolean\"')\n    }\n    if(!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    // sha256sum will be empty for anonymous or https requests\n    if (!this.enableSHA256 && sha256sum.length !== 0) {\n      throw new errors.InvalidArgumentError(`sha256sum expected to be empty for anonymous or https requests`)\n    }\n    // sha256sum should be valid for non-anonymous http requests.\n    if (this.enableSHA256 && sha256sum.length !== 64) {\n      throw new errors.InvalidArgumentError(`Invalid sha256sum : ${sha256sum}`)\n    }\n\n    var _makeRequest = (e, region) => {\n      if (e) return cb(e)\n      options.region = region\n      var reqOptions = this.getRequestOptions(options)\n      if (!this.anonymous) {\n        // For non-anonymous https requests sha256sum is 'UNSIGNED-PAYLOAD' for signature calculation.\n        if (!this.enableSHA256) sha256sum = 'UNSIGNED-PAYLOAD'\n\n        let date = new Date()\n\n        reqOptions.headers['x-amz-date'] = makeDateLong(date)\n        reqOptions.headers['x-amz-content-sha256'] = sha256sum\n        if (this.sessionToken) {\n          reqOptions.headers['x-amz-security-token'] = this.sessionToken\n        }\n\n        var authorization = signV4(reqOptions, this.accessKey, this.secretKey, region, date)\n        reqOptions.headers.authorization = authorization\n      }\n      var req = this.transport.request(reqOptions, response => {\n        if (statusCode !== response.statusCode) {\n          // For an incorrect region, S3 server always sends back 400.\n          // But we will do cache invalidation for all errors so that,\n          // in future, if AWS S3 decides to send a different status code or\n          // XML error code we will still work fine.\n          delete(this.regionMap[options.bucketName])\n          var errorTransformer = transformers.getErrorTransformer(response)\n          pipesetup(response, errorTransformer)\n            .on('error', e => {\n              this.logHTTP(reqOptions, response, e)\n              cb(e)\n            })\n          return\n        }\n        this.logHTTP(reqOptions, response)\n        if (returnResponse) return cb(null, response)\n        // We drain the socket so that the connection gets closed. Note that this\n        // is not expensive as the socket will not have any data.\n        response.on('data', ()=>{})\n        cb(null)\n      })\n      let pipe = pipesetup(stream, req)\n      pipe.on('error', e => {\n        this.logHTTP(reqOptions, null, e)\n        cb(e)\n      })\n    }\n    if (region) return _makeRequest(null, region)\n    this.getBucketRegion(options.bucketName, _makeRequest)\n  }\n\n  // gets the region of the bucket\n  getBucketRegion(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name : ${bucketName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n\n    // Region is set with constructor, return the region right here.\n    if (this.region) return cb(null, this.region)\n\n    if (this.regionMap[bucketName]) return cb(null, this.regionMap[bucketName])\n    var extractRegion = (response) => {\n      var transformer = transformers.getBucketRegionTransformer()\n      var region = 'us-east-1'\n      pipesetup(response, transformer)\n        .on('error', cb)\n        .on('data', data => {\n          if (data) region = data\n        })\n        .on('end', () => {\n          this.regionMap[bucketName] = region\n          cb(null, region)\n        })\n    }\n\n    var method = 'GET'\n    var query = 'location'\n\n    // `getBucketLocation` behaves differently in following ways for\n    // different environments.\n    //\n    // - For nodejs env we default to path style requests.\n    // - For browser env path style requests on buckets yields CORS\n    //   error. To circumvent this problem we make a virtual host\n    //   style request signed with 'us-east-1'. This request fails\n    //   with an error 'AuthorizationHeaderMalformed', additionally\n    //   the error XML also provides Region of the bucket. To validate\n    //   this region is proper we retry the same request with the newly\n    //   obtained region.\n    var pathStyle = typeof window === 'undefined'\n    this.makeRequest({method, bucketName, query, pathStyle}, '', 200, 'us-east-1', true, (e, response) => {\n      if (e) {\n        if (e.name === 'AuthorizationHeaderMalformed') {\n          var region = e.Region\n          if (!region) return cb(e)\n          this.makeRequest({method, bucketName, query}, '', 200, region, true, (e, response) => {\n            if (e) return cb(e)\n            extractRegion(response)\n          })\n          return\n        }\n        return cb(e)\n      }\n      extractRegion(response)\n    })\n  }\n\n  // Creates the bucket `bucketName`.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ - Name of the bucket\n  // * `region` _string_ - region valid values are _us-west-1_, _us-west-2_,  _eu-west-1_, _eu-central-1_, _ap-southeast-1_, _ap-northeast-1_, _ap-southeast-2_, _sa-east-1_.\n  // * `callback(err)` _function_ - callback function with `err` as the error argument. `err` is null if the bucket is successfully created.\n  makeBucket(bucketName, region, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n\n    if (isFunction(region)) {\n      cb = region\n      region = ''\n    }\n\n    if (!isString(region)) {\n      throw new TypeError('region should be of type \"string\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var payload = ''\n\n    // Region already set in constructor, validate if\n    // caller requested bucket location is same.\n    if (region && this.region) {\n      if (region !== this.region) {\n        throw new errors.InvalidArgumentError(`Configured region ${this.region}, requested ${region}`)\n      }\n    }\n\n    // sending makeBucket request with XML containing 'us-east-1' fails. For\n    // default region server expects the request without body\n    if (region && region !== 'us-east-1') {\n      var createBucketConfiguration = []\n      createBucketConfiguration.push({\n        _attr: {\n          xmlns: 'http://s3.amazonaws.com/doc/2006-03-01/'\n        }\n      })\n      createBucketConfiguration.push({\n        LocationConstraint: region\n      })\n      var payloadObject = {\n        CreateBucketConfiguration: createBucketConfiguration\n      }\n      payload = Xml(payloadObject)\n    }\n    var method = 'PUT'\n    var headers = {}\n    if (!region) region = 'us-east-1'\n    this.makeRequest({method, bucketName, headers}, payload, 200, region, false, cb)\n  }\n\n  // List of buckets created.\n  //\n  // __Arguments__\n  // * `callback(err, buckets)` _function_ - callback function with error as the first argument. `buckets` is an array of bucket information\n  //\n  // `buckets` array element:\n  // * `bucket.name` _string_ : bucket name\n  // * `bucket.creationDate` _Date_: date when bucket was created\n  listBuckets(cb) {\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'GET'\n    this.makeRequest({method}, '', 200, 'us-east-1', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getListBucketTransformer()\n      var buckets\n      pipesetup(response, transformer)\n        .on('data', result => buckets = result)\n        .on('error', e => cb(e))\n        .on('end', () => cb(null, buckets))\n    })\n  }\n\n  // Returns a stream that emits objects that are partially uploaded.\n  //\n  // __Arguments__\n  // * `bucketname` _string_: name of the bucket\n  // * `prefix` _string_: prefix of the object names that are partially uploaded (optional, default `''`)\n  // * `recursive` _bool_: directory style listing when false, recursive listing when true (optional, default `false`)\n  //\n  // __Return Value__\n  // * `stream` _Stream_ : emits objects of the format:\n  //   * `object.key` _string_: name of the object\n  //   * `object.uploadId` _string_: upload ID of the object\n  //   * `object.size` _Integer_: size of the partially uploaded object\n  listIncompleteUploads(bucket, prefix, recursive) {\n    if (prefix === undefined) prefix = ''\n    if (recursive === undefined) recursive = false\n    if (!isValidBucketName(bucket)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucket)\n    }\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    if (!isBoolean(recursive)) {\n      throw new TypeError('recursive should be of type \"boolean\"')\n    }\n    var delimiter = recursive ? '' : '/'\n    var keyMarker = ''\n    var uploadIdMarker = ''\n    var uploads = []\n    var ended = false\n    var readStream = Stream.Readable({objectMode: true})\n    readStream._read = () => {\n      // push one upload info per _read()\n      if (uploads.length) {\n        return readStream.push(uploads.shift())\n      }\n      if (ended) return readStream.push(null)\n      this.listIncompleteUploadsQuery(bucket, prefix, keyMarker, uploadIdMarker, delimiter)\n        .on('error', e => readStream.emit('error', e))\n        .on('data', result => {\n          result.prefixes.forEach(prefix => uploads.push(prefix))\n          async.eachSeries(result.uploads, (upload, cb) => {\n            // for each incomplete upload add the sizes of its uploaded parts\n            this.listParts(bucket, upload.key, upload.uploadId, (err, parts) => {\n              if (err) return cb(err)\n              upload.size = parts.reduce((acc, item) => acc + item.size, 0)\n              uploads.push(upload)\n              cb()\n            })\n          }, err => {\n            if (err) {\n              readStream.emit('error', err)\n              return\n            }\n            if (result.isTruncated) {\n              keyMarker = result.nextKeyMarker\n              uploadIdMarker = result.nextUploadIdMarker\n            } else {\n              ended = true\n            }\n            readStream._read()\n          })\n        })\n    }\n    return readStream\n  }\n\n  // To check if a bucket already exists.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ : name of the bucket\n  // * `callback(err)` _function_ : `err` is `null` if the bucket exists\n  bucketExists(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'HEAD'\n    this.makeRequest({method, bucketName}, '', 200, '', false, err => {\n      if (err) {\n        if (err.code == 'NoSuchBucket' || err.code == 'NotFound') return cb(null, false)\n        return cb(err)\n      }\n      cb(null, true)\n    })\n  }\n\n  // Remove a bucket.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ : name of the bucket\n  // * `callback(err)` _function_ : `err` is `null` if the bucket is removed successfully.\n  removeBucket(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'DELETE'\n    this.makeRequest({method, bucketName}, '', 204, '', false, (e) => {\n      // If the bucket was successfully removed, remove the region map entry.\n      if (!e) delete(this.regionMap[bucketName])\n      cb(e)\n    })\n  }\n\n  // Remove the partially uploaded object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `callback(err)` _function_: callback function is called with non `null` value in case of error\n  removeIncompleteUpload(bucketName, objectName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.isValidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var removeUploadId\n    async.during(\n      cb => {\n        this.findUploadId(bucketName, objectName, (e, uploadId) => {\n          if (e) return cb(e)\n          removeUploadId = uploadId\n          cb(null, uploadId)\n        })\n      },\n      cb => {\n        var method = 'DELETE'\n        var query = `uploadId=${removeUploadId}`\n        this.makeRequest({method, bucketName, objectName, query}, '', 204, '', false, e => cb(e))\n      },\n      cb\n    )\n  }\n\n  // Callback is called with `error` in case of error or `null` in case of success\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `filePath` _string_: path to which the object data will be written to\n  // * `callback(err)` _function_: callback is called with `err` in case of error.\n  fGetObject(bucketName, objectName, filePath, cb) {\n    // Input validation.\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(filePath)) {\n      throw new TypeError('filePath should be of type \"string\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    // Internal data.\n    var partFile\n    var partFileStream\n    var objStat\n\n    // Rename wrapper.\n    var rename = err => {\n      if (err) return cb(err)\n      fs.rename(partFile, filePath, cb)\n    }\n\n    async.waterfall([\n      cb => this.statObject(bucketName, objectName, cb),\n      (result, cb) => {\n        objStat = result\n        // Create any missing top level directories.\n        mkdirp(path.dirname(filePath), cb)\n      },\n      (ignore, cb) => {\n        partFile = `${filePath}.${objStat.etag}.part.minio`\n        fs.stat(partFile, (e, stats) => {\n          var offset = 0\n          if (e) {\n            partFileStream = fs.createWriteStream(partFile, {flags: 'w'})\n          } else {\n            if (objStat.size === stats.size) return rename()\n            offset = stats.size\n            partFileStream = fs.createWriteStream(partFile, {flags: 'a'})\n          }\n          this.getPartialObject(bucketName, objectName, offset, 0, cb)\n        })\n      },\n      (downloadStream, cb) => {\n        pipesetup(downloadStream, partFileStream)\n          .on('error', e => cb(e))\n          .on('finish', cb)\n      },\n      cb => fs.stat(partFile, cb),\n      (stats, cb) => {\n        if (stats.size === objStat.size) return cb()\n        cb(new Error('Size mismatch between downloaded file and the object'))\n      }\n    ], rename)\n  }\n\n  // Callback is called with readable stream of the object content.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `callback(err, stream)` _function_: callback is called with `err` in case of error. `stream` is the object content stream\n  getObject(bucketName, objectName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    this.getPartialObject(bucketName, objectName, 0, 0, cb)\n  }\n\n  // Callback is called with readable stream of the partial object content.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `offset` _number_: offset of the object from where the stream will start\n  // * `length` _number_: length of the object that will be read in the stream (optional, if not specified we read the rest of the file from the offset)\n  // * `callback(err, stream)` _function_: callback is called with `err` in case of error. `stream` is the object content stream\n  getPartialObject(bucketName, objectName, offset, length, cb) {\n    if (isFunction(length)) {\n      cb = length\n      length = 0\n    }\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isNumber(offset)) {\n      throw new TypeError('offset should be of type \"number\"')\n    }\n    if (!isNumber(length)) {\n      throw new TypeError('length should be of type \"number\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var range = ''\n    if (offset || length) {\n      if (offset) {\n        range = `bytes=${+offset}-`\n      } else {\n        range = 'bytes=0-'\n        offset = 0\n      }\n      if (length) {\n        range += `${(+length + offset) - 1}`\n      }\n    }\n\n    var headers = {}\n    if (range !== '') {\n      headers.range = range\n    }\n\n    var expectedStatus = 200\n    if (range) {\n      expectedStatus = 206\n    }\n    var method = 'GET'\n    this.makeRequest({method, bucketName, objectName, headers}, '', expectedStatus, '', true, cb)\n  }\n\n  // Uploads the object using contents from a file\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `filePath` _string_: file path of the file to be uploaded\n  // * `metaData` _Javascript Object_: metaData assosciated with the object\n  // * `callback(err, etag)` _function_: non null `err` indicates error, `etag` _string_ is the etag of the object uploaded.\n  fPutObject(bucketName, objectName, filePath, metaData, callback) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    if (!isString(filePath)) {\n      throw new TypeError('filePath should be of type \"string\"')\n    }\n    if (isFunction(metaData)) {\n      callback = metaData\n      metaData = {} // Set metaData empty if no metaData provided.\n    }\n    if (!isObject(metaData)) {\n      throw new TypeError('metaData should be of type \"object\"')\n    }\n\n    //Updates metaData to have the correct prefix if needed\n    metaData = prependXAMZMeta(metaData)\n    var size\n    var partSize\n\n    async.waterfall([\n      cb => fs.stat(filePath, cb),\n      (stats, cb) => {\n        size = stats.size\n        if (size > this.maxObjectSize) {\n          return cb(new Error(`${filePath} size : ${stats.size}, max allowed size : 5TB`))\n        }\n        if (size < this.minimumPartSize) {\n          // simple PUT request, no multipart\n          var multipart = false\n          var uploader = this.getUploader(bucketName, objectName, metaData, multipart)\n          var hash = transformers.getHashSummer(this.enableSHA256)\n          var start = 0\n          var end = size - 1\n          var autoClose = true\n          if (size === 0) end = 0\n          var options = {start, end, autoClose}\n          pipesetup(fs.createReadStream(filePath, options), hash)\n            .on('data', data => {\n              var md5sum = data.md5sum\n              var sha256sum = data.sha256sum\n              var stream = fs.createReadStream(filePath, options)\n              uploader(stream, size, sha256sum, md5sum, (err, etag) => {\n                callback(err, etag)\n                cb(true)\n              })\n            })\n            .on('error', e => cb(e))\n          return\n        }\n        this.findUploadId(bucketName, objectName, cb)\n      },\n      (uploadId, cb) => {\n        // if there was a previous incomplete upload, fetch all its uploaded parts info\n        if (uploadId) return this.listParts(bucketName, objectName, uploadId,  (e, etags) =>  cb(e, uploadId, etags))\n        // there was no previous upload, initiate a new one\n        this.initiateNewMultipartUpload(bucketName, objectName, metaData, (e, uploadId) => cb(e, uploadId, []))\n      },\n      (uploadId, etags, cb) => {\n        partSize = this.calculatePartSize(size)\n        var multipart = true\n        var uploader = this.getUploader(bucketName, objectName, metaData, multipart)\n\n        // convert array to object to make things easy\n        var parts = etags.reduce(function(acc, item) {\n          if (!acc[item.part]) {\n            acc[item.part] = item\n          }\n          return acc\n        }, {})\n        var partsDone = []\n        var partNumber = 1\n        var uploadedSize = 0\n        async.whilst(\n          () => uploadedSize < size,\n          cb => {\n            var part = parts[partNumber]\n            var hash = transformers.getHashSummer(this.enableSHA256)\n            var length = partSize\n            if (length > (size - uploadedSize)) {\n              length = size - uploadedSize\n            }\n            var start = uploadedSize\n            var end = uploadedSize + length - 1\n            var autoClose = true\n            var options = {autoClose, start, end}\n            // verify md5sum of each part\n            pipesetup(fs.createReadStream(filePath, options), hash)\n              .on('data', data => {\n                var md5sumHex = (new Buffer(data.md5sum, 'base64')).toString('hex')\n                if (part && (md5sumHex === part.etag)) {\n                  //md5 matches, chunk already uploaded\n                  partsDone.push({part: partNumber, etag: part.etag})\n                  partNumber++\n                  uploadedSize += length\n                  return cb()\n                }\n                // part is not uploaded yet, or md5 mismatch\n                var stream = fs.createReadStream(filePath, options)\n                uploader(uploadId, partNumber, stream, length,\n                         data.sha256sum, data.md5sum, (e, etag) => {\n                           if (e) return cb(e)\n                           partsDone.push({part: partNumber, etag})\n                           partNumber++\n                           uploadedSize += length\n                           return cb()\n                         })\n              })\n              .on('error', e => cb(e))\n          },\n          e => {\n            if (e) return cb(e)\n            cb(null, partsDone, uploadId)\n          }\n        )\n      },\n      // all parts uploaded, complete the multipart upload\n      (etags, uploadId, cb) => this.completeMultipartUpload(bucketName, objectName, uploadId, etags, cb)\n    ], (err, ...rest) => {\n      if (err === true) return\n      callback(err, ...rest)\n    })\n  }\n\n  // Uploads the object.\n  //\n  // Uploading a stream\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `stream` _Stream_: Readable stream\n  // * `size` _number_: size of the object (optional)\n  // * `callback(err, etag)` _function_: non null `err` indicates error, `etag` _string_ is the etag of the object uploaded.\n  //\n  // Uploading \"Buffer\" or \"string\"\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `string or Buffer` _string_ or _Buffer_: string or buffer\n  // * `callback(err, etag)` _function_: non null `err` indicates error, `etag` _string_ is the etag of the object uploaded.\n  putObject(bucketName, objectName, stream, size, metaData, callback) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    // We'll need to shift arguments to the left because of size and metaData.\n    if (isFunction(size)) {\n      callback = size\n      metaData = {}\n    } else if (isFunction(metaData)) {\n      callback = metaData\n      metaData = {}\n    }\n\n    // We'll need to shift arguments to the left because of metaData\n    // and size being optional.\n    if (isObject(size)) {\n      metaData = size\n    }\n\n    //Ensures Metadata has appropriate prefix for A3 API\n    metaData = prependXAMZMeta(metaData)\n    if (typeof stream === 'string' || stream instanceof Buffer) {\n      // Adapts the non-stream interface into a stream.\n      size = stream.length\n      stream = readableStream(stream)\n    } else if (!isReadableStream(stream)) {\n      throw new TypeError('third argument should be of type \"stream.Readable\" or \"Buffer\" or \"string\"')\n    }\n\n    if (!isFunction(callback)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    if (isNumber(size) && size < 0) {\n      throw new errors.InvalidArgumentError(`size cannot be negative, given size: ${size}`)\n    }\n\n    // Get the part size and forward that to the BlockStream. Default to the\n    // largest block size possible if necessary.\n    if (!isNumber(size))\n      size = this.maxObjectSize\n\n    size = this.calculatePartSize(size)\n\n    // s3 requires that all non-end chunks be at least `this.minimumPartSize`,\n    // so we chunk the stream until we hit either that size or the end before\n    // we flush it to s3.\n    let chunker = BlockStream2({size, zeroPadding: false})\n\n    // This is a Writable stream that can be written to in order to upload\n    // to the specified bucket and object automatically.\n    let uploader = new ObjectUploader(this, bucketName, objectName, size, metaData, callback)\n    // stream => chunker => uploader\n    stream.pipe(chunker).pipe(uploader)\n  }\n\n  // Copy the object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `srcObject` _string_: path of the source object to be copied\n  // * `conditions` _CopyConditions_: copy conditions that needs to be satisfied (optional, default `null`)\n  // * `callback(err, {etag, lastModified})` _function_: non null `err` indicates error, `etag` _string_ and `listModifed` _Date_ are respectively the etag and the last modified date of the newly copied object\n  copyObject(arg1, arg2, arg3, arg4, arg5) {\n    var bucketName = arg1\n    var objectName = arg2\n    var srcObject = arg3\n    var conditions, cb\n    if (typeof arg4 == 'function' && arg5 === undefined) {\n      conditions = null\n      cb = arg4\n    } else {\n      conditions = arg4\n      cb = arg5\n    }\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(srcObject)) {\n      throw new TypeError('srcObject should be of type \"string\"')\n    }\n    if (srcObject === \"\") {\n      throw new errors.InvalidPrefixError(`Empty source prefix`)\n    }\n\n    if (conditions !== null && !(conditions instanceof CopyConditions)) {\n      throw new TypeError('conditions should be of type \"CopyConditions\"')\n    }\n\n    var headers = {}\n    headers['x-amz-copy-source'] = uriEscape(srcObject)\n\n    if (conditions !== null) {\n      if (conditions.modified !== \"\") {\n        headers['x-amz-copy-source-if-modified-since'] = conditions.modified\n      }\n      if (conditions.unmodified !== \"\") {\n        headers['x-amz-copy-source-if-unmodified-since'] = conditions.unmodified\n      }\n      if (conditions.matchETag !== \"\") {\n        headers['x-amz-copy-source-if-match'] = conditions.matchETag\n      }\n      if (conditions.matchEtagExcept !== \"\") {\n        headers['x-amz-copy-source-if-none-match'] = conditions.matchETagExcept\n      }\n    }\n\n    var method = 'PUT'\n    this.makeRequest({method, bucketName, objectName, headers}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getCopyObjectTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', data => cb(null, data))\n    })\n  }\n\n  // list a batch of objects\n  listObjectsQuery(bucketName, prefix, marker, delimiter, maxKeys) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isString(marker)) {\n      throw new TypeError('marker should be of type \"string\"')\n    }\n    if (!isString(delimiter)) {\n      throw new TypeError('delimiter should be of type \"string\"')\n    }\n    if (!isNumber(maxKeys)) {\n      throw new TypeError('maxKeys should be of type \"number\"')\n    }\n    var queries = []\n    // escape every value in query string, except maxKeys\n    if (prefix) {\n      prefix = uriEscape(prefix)\n      queries.push(`prefix=${prefix}`)\n    }\n    if (marker) {\n      marker = uriEscape(marker)\n      queries.push(`marker=${marker}`)\n    }\n    if (delimiter) {\n      delimiter = uriEscape(delimiter)\n      queries.push(`delimiter=${delimiter}`)\n    }\n    // no need to escape maxKeys\n    if (maxKeys) {\n      if (maxKeys >= 1000) {\n        maxKeys = 1000\n      }\n      queries.push(`max-keys=${maxKeys}`)\n    }\n    queries.sort()\n    var query = ''\n    if (queries.length > 0) {\n      query = `${queries.join('&')}`\n    }\n\n    var method = 'GET'\n    var transformer = transformers.getListObjectsTransformer()\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return transformer.emit('error', e)\n      pipesetup(response, transformer)\n    })\n    return transformer\n  }\n\n  // List the objects in the bucket.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: the prefix of the objects that should be listed (optional, default `''`)\n  // * `recursive` _bool_: `true` indicates recursive style listing and `false` indicates directory style listing delimited by '/'. (optional, default `false`)\n  //\n  // __Return Value__\n  // * `stream` _Stream_: stream emitting the objects in the bucket, the object is of the format:\n  // * `obj.name` _string_: name of the object\n  // * `obj.prefix` _string_: name of the object prefix\n  // * `obj.size` _number_: size of the object\n  // * `obj.etag` _string_: etag of the object\n  // * `obj.lastModified` _Date_: modified time stamp\n  listObjects(bucketName, prefix, recursive) {\n    if (prefix === undefined) prefix = ''\n    if (recursive === undefined) recursive = false\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isBoolean(recursive)) {\n      throw new TypeError('recursive should be of type \"boolean\"')\n    }\n    // if recursive is false set delimiter to '/'\n    var delimiter = recursive ? '' : '/'\n    var marker = ''\n    var objects = []\n    var ended = false\n    var readStream = Stream.Readable({objectMode: true})\n    readStream._read = () => {\n      // push one object per _read()\n      if (objects.length) {\n        readStream.push(objects.shift())\n        return\n      }\n      if (ended) return readStream.push(null)\n      // if there are no objects to push do query for the next batch of objects\n      this.listObjectsQuery(bucketName, prefix, marker, delimiter, 1000)\n        .on('error', e => readStream.emit('error', e))\n        .on('data', result => {\n          if (result.isTruncated) {\n            marker = result.nextMarker\n          } else {\n            ended = true\n          }\n          objects = result.objects\n          readStream._read()\n        })\n    }\n    return readStream\n  }\n\n  // listObjectsV2Query - (List Objects V2) - List some or all (up to 1000) of the objects in a bucket.\n  //\n  // You can use the request parameters as selection criteria to return a subset of the objects in a bucket.\n  // request parameters :-\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: Limits the response to keys that begin with the specified prefix.\n  // * `continuation-token` _string_: Used to continue iterating over a set of objects.\n  // * `delimiter` _string_: A delimiter is a character you use to group keys.\n  // * `max-keys` _number_: Sets the maximum number of keys returned in the response body.\n  // * `start-after` _string_: Specifies the key to start after when listing objects in a bucket.\n  listObjectsV2Query(bucketName, prefix, continuationToken, delimiter, maxKeys, startAfter) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isString(continuationToken)) {\n      throw new TypeError('continuationToken should be of type \"string\"')\n    }\n    if (!isString(delimiter)) {\n      throw new TypeError('delimiter should be of type \"string\"')\n    }\n    if (!isNumber(maxKeys)) {\n      throw new TypeError('maxKeys should be of type \"number\"')\n    }\n    if (!isString(startAfter)) {\n      throw new TypeError('startAfter should be of type \"string\"')\n    }\n    var queries = []\n\n    // Call for listing objects v2 API\n    queries.push(`list-type=2`)\n\n    // escape every value in query string, except maxKeys\n    if (prefix) {\n      prefix = uriEscape(prefix)\n      queries.push(`prefix=${prefix}`)\n    }\n    if (continuationToken) {\n      continuationToken = uriEscape(continuationToken)\n      queries.push(`continuation-token=${continuationToken}`)\n    }\n    if (delimiter) {\n      delimiter = uriEscape(delimiter)\n      queries.push(`delimiter=${delimiter}`)\n    }\n    // Set start-after\n    if (startAfter) {\n      startAfter = uriEscape(startAfter)\n      queries.push(`start-after=${startAfter}`)\n    }\n    // no need to escape maxKeys\n    if (maxKeys) {\n      if (maxKeys >= 1000) {\n        maxKeys = 1000\n      }\n      queries.push(`max-keys=${maxKeys}`)\n    }    \n    queries.sort()\n    var query = ''\n    if (queries.length > 0) {\n      query = `${queries.join('&')}`\n    }\n    var method = 'GET'\n    var transformer = transformers.getListObjectsV2Transformer()\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return transformer.emit('error', e)\n      pipesetup(response, transformer)\n    })\n    return transformer\n  }\n\n\n  // List the objects in the bucket using S3 ListObjects V2\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: the prefix of the objects that should be listed (optional, default `''`)\n  // * `recursive` _bool_: `true` indicates recursive style listing and `false` indicates directory style listing delimited by '/'. (optional, default `false`)\n  // * `startAfter` _string_: Specifies the key to start after when listing objects in a bucket. (optional, default `''`)\n  //\n  // __Return Value__\n  // * `stream` _Stream_: stream emitting the objects in the bucket, the object is of the format:\n  //   * `obj.name` _string_: name of the object\n  //   * `obj.prefix` _string_: name of the object prefix\n  //   * `obj.size` _number_: size of the object\n  //   * `obj.etag` _string_: etag of the object\n  //   * `obj.lastModified` _Date_: modified time stamp\n  listObjectsV2(bucketName, prefix, recursive, startAfter) {\n    if (prefix === undefined) prefix = ''\n    if (recursive === undefined) recursive = false\n    if (startAfter === undefined) startAfter = ''\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isBoolean(recursive)) {\n      throw new TypeError('recursive should be of type \"boolean\"')\n    }\n    if (!isString(startAfter)) {\n      throw new TypeError('startAfter should be of type \"string\"')\n    }\n    // if recursive is false set delimiter to '/'\n    var delimiter = recursive ? '' : '/'\n    var continuationToken = ''\n    var objects = []\n    var ended = false\n    var readStream = Stream.Readable({objectMode: true})\n    readStream._read = () => {\n      // push one object per _read()\n      if (objects.length) {\n        readStream.push(objects.shift())\n        return\n      }\n      if (ended) return readStream.push(null)\n      // if there are no objects to push do query for the next batch of objects\n      this.listObjectsV2Query(bucketName, prefix, continuationToken, delimiter, 1000, startAfter)\n        .on('error', e => readStream.emit('error', e))\n        .on('data', result => {\n          if (result.isTruncated) {\n            continuationToken = result.nextContinuationToken\n          } else {\n            ended = true\n          }\n          objects = result.objects\n          readStream._read()\n        })\n    }\n    return readStream\n  }\n\n  // Stat information of the object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `callback(err, stat)` _function_: `err` is not `null` in case of error, `stat` contains the object information:\n  //   * `stat.size` _number_: size of the object\n  //   * `stat.etag` _string_: etag of the object\n  //   * `stat.metaData` _string_: MetaData of the object\n  //   * `stat.lastModified` _Date_: modified time stamp\n  statObject(bucketName, objectName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var method = 'HEAD'\n    this.makeRequest({method, bucketName, objectName}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n\n      // We drain the socket so that the connection gets closed. Note that this\n      // is not expensive as the socket will not have any data.\n      response.on('data', ()=>{})\n\n      var result = {\n        size: +response.headers['content-length'],\n        metaData: extractMetadata(response.headers),\n        lastModified: new Date(response.headers['last-modified'])\n      }\n      var etag = response.headers.etag\n      if (etag) {\n        etag = etag.replace(/^\"/, '').replace(/\"$/, '')\n        result.etag = etag\n      }\n      cb(null, result)\n    })\n  }\n\n  // Remove the specified object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `callback(err)` _function_: callback function is called with non `null` value in case of error\n  removeObject(bucketName, objectName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'DELETE'\n    this.makeRequest({method, bucketName, objectName}, '', 204, '', false, cb)\n  }\n\n  // Remove all the objects residing in the objectsList.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectsList` _array_: array of objects\n  removeObjects(bucketName, objectsList, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isArray(objectsList)) {\n      throw new errors.InvalidArgumentError('objectsList should be a list')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    const maxEntries = 1000\n    const query = 'delete'\n    const method = 'POST'\n\n    let result = objectsList.reduce((result, entry) => {\n      result.list.push(entry)\n      if (result.list.length === maxEntries) {\n        result.listOfList.push(result.list)\n        result.list = []\n      }\n      return result\n    }, {listOfList: [], list:[]})\n\n    if (result.list.length > 0) {\n      result.listOfList.push(result.list)\n    }\n\n    async.eachSeries(result.listOfList, (list, callback) => {\n      var deleteObjects={\"Delete\":[{\"Quiet\": true}]}\n\n      list.forEach(function(value){\n        deleteObjects[\"Delete\"].push({\"Object\": [{\"Key\": value}]})\n      })\n\n      let payload = Xml(deleteObjects)\n\n      var headers = {}\n      var md5digest = Crypto.createHash('md5').update(payload).digest()\n\n      headers['Content-MD5'] = md5digest.toString('base64')\n\n      this.makeRequest({ method, bucketName, query, headers}, payload, 200, '', false, (e) => {\n        if (e) return callback(e)\n        callback(null)\n      })\n    }, cb)\n  }\n     \n\n  // Get the policy on a bucket or an object prefix.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `callback(err, policy)` _function_: callback function\n  getBucketPolicy(bucketName, cb) {\n    // Validate arguments.\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name: ${bucketName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    let method = 'GET'\n    let query = 'policy'\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let policy = new Buffer('')\n      pipesetup(response, transformers.getConcater())\n        .on('data', data => policy = data)\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, policy.toString())\n        })\n    })\n  }\n\n  // Set the policy on a bucket or an object prefix.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `bucketPolicy` _string_: bucket policy (JSON stringify'ed)\n  // * `callback(err)` _function_: callback function\n  setBucketPolicy(bucketName, policy, cb) {\n    // Validate arguments.\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name: ${bucketName}`)\n    }\n    if (!isString(policy)) {\n      throw new errors.InvalidBucketPolicyError(`Invalid bucket policy: ${policy} - must be \"string\"`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    let method = 'DELETE'\n    let query = 'policy'\n\n    if (policy) {\n      method = 'PUT'\n    }\n\n    this.makeRequest({method, bucketName, query}, policy, 204, '', false, cb)\n  }\n\n  // Generate a generic presigned URL which can be\n  // used for HTTP methods GET, PUT, HEAD and DELETE\n  //\n  // __Arguments__\n  // * `method` _string_: name of the HTTP method\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `expiry` _number_: expiry in seconds (optional, default 7 days)\n  // * `reqParams` _object_: request parameters (optional)\n  // * `requestDate` _Date_: A date object, the url will be issued at (optional)\n  presignedUrl(method, bucketName, objectName, expires, reqParams, requestDate, cb) {\n    if (this.anonymous) {\n      throw new errors.AnonymousRequestError('Presigned ' + method + ' url cannot be generated for anonymous requests')\n    }\n    if (isFunction(requestDate)) {\n      cb = requestDate\n      requestDate = new Date()\n    }\n    if (isFunction(reqParams)) {\n      cb = reqParams\n      reqParams = {}\n      requestDate = new Date()\n    }\n    if (isFunction(expires)) {\n      cb = expires\n      reqParams = {}\n      expires = 24 * 60 * 60 * 7 // 7 days in seconds\n      requestDate = new Date()\n    }\n    if (!isNumber(expires)) {\n      throw new TypeError('expires should be of type \"number\"')\n    }\n    if (!isObject(reqParams)) {\n      throw new TypeError('reqParams should be of type \"object\"')\n    }\n    if (!isValidDate(requestDate)) {\n      throw new TypeError('requestDate should be of type \"Date\" and valid')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var query = querystring.stringify(reqParams)\n    this.getBucketRegion(bucketName, (e, region) => {\n      if (e) return cb(e)\n      // This statement is added to ensure that we send error through\n      // callback on presign failure.\n      var url\n      var reqOptions = this.getRequestOptions({method,\n                                               region,\n                                               bucketName,\n                                               objectName,\n                                               query})\n      try {\n        url = presignSignatureV4(reqOptions, this.accessKey, this.secretKey,\n                                 region, requestDate, expires)\n      } catch (pe) {\n        return cb(pe)\n      }\n      cb(null, url)\n    })\n  }\n\n  // Generate a presigned URL for GET\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `expiry` _number_: expiry in seconds (optional, default 7 days)\n  // * `respHeaders` _object_: response headers to override (optional)\n  // * `requestDate` _Date_: A date object, the url will be issued at (optional)\n  presignedGetObject(bucketName, objectName, expires, respHeaders, requestDate, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    var validRespHeaders = ['response-content-type', 'response-content-language', 'response-expires', 'response-cache-control',\n                            'response-content-disposition', 'response-content-encoding']\n    validRespHeaders.forEach(header => {\n      if  (respHeaders !== undefined && respHeaders[header] !== undefined && !isString(respHeaders[header])) {\n        throw new TypeError(`response header ${header} should be of type \"string\"`)\n      }\n    })\n    return this.presignedUrl('GET', bucketName, objectName, expires, respHeaders, requestDate, cb)\n  }\n\n  // Generate a presigned URL for PUT. Using this URL, the browser can upload to S3 only with the specified object name.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `expiry` _number_: expiry in seconds (optional, default 7 days)\n  presignedPutObject(bucketName, objectName, expires, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ${bucketName}')\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError('Invalid object name: ${objectName}')\n    }\n    return this.presignedUrl('PUT', bucketName, objectName, expires, cb)\n  }\n\n  // return PostPolicy object\n  newPostPolicy() {\n    return new PostPolicy()\n  }\n\n  // presignedPostPolicy can be used in situations where we want more control on the upload than what\n  // presignedPutObject() provides. i.e Using presignedPostPolicy we will be able to put policy restrictions\n  // on the object's `name` `bucket` `expiry` `Content-Type`\n  presignedPostPolicy(postPolicy, cb) {\n    if (this.anonymous) {\n      throw new errors.AnonymousRequestError('Presigned POST policy cannot be generated for anonymous requests')\n    }\n    if (!isObject(postPolicy)) {\n      throw new TypeError('postPolicy should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n    this.getBucketRegion(postPolicy.formData.bucket, (e, region) => {\n      if (e) return cb(e)\n      var date = new Date()\n      var dateStr = makeDateLong(date)\n\n      if (!postPolicy.policy.expiration) {\n        // 'expiration' is mandatory field for S3.\n        // Set default expiration date of 7 days.\n        var expires = new Date()\n        expires.setSeconds(24 * 60 * 60 * 7)\n        postPolicy.setExpires(expires)\n      }\n\n      postPolicy.policy.conditions.push(['eq', '$x-amz-date', dateStr])\n      postPolicy.formData['x-amz-date'] = dateStr\n\n      postPolicy.policy.conditions.push(['eq', '$x-amz-algorithm', 'AWS4-HMAC-SHA256'])\n      postPolicy.formData['x-amz-algorithm'] = 'AWS4-HMAC-SHA256'\n\n      postPolicy.policy.conditions.push([\"eq\", \"$x-amz-credential\", this.accessKey + \"/\" + getScope(region, date)])\n      postPolicy.formData['x-amz-credential'] = this.accessKey + \"/\" + getScope(region, date)\n\n      var policyBase64 = new Buffer(JSON.stringify(postPolicy.policy)).toString('base64')\n\n      postPolicy.formData.policy = policyBase64\n\n      var signature = postPresignSignatureV4(region, date, this.secretKey, policyBase64)\n\n      postPolicy.formData['x-amz-signature'] = signature\n      var opts = {}\n      opts.region = region\n      opts.bucketName = postPolicy.formData.bucket\n      var reqOptions = this.getRequestOptions(opts)\n      var portStr = (this.port == 80 || this.port === 443) ? '' : `:${this.port.toString()}`\n      var urlStr = `${reqOptions.protocol}//${reqOptions.host}${portStr}${reqOptions.path}`\n      cb(null, {postURL: urlStr,formData: postPolicy.formData})\n    })\n  }\n\n  // Calls implemented below are related to multipart.\n\n  // Initiate a new multipart upload.\n  initiateNewMultipartUpload(bucketName, objectName, metaData, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isObject(metaData)) {\n      throw new errors.InvalidObjectNameError('contentType should be of type \"object\"')\n    }\n    var method = 'POST'\n    let headers = Object.assign({}, metaData)\n    var query = 'uploads'\n    this.makeRequest({method, bucketName, objectName, query, headers}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getInitiateMultipartTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', uploadId => cb(null, uploadId))\n    })\n  }\n\n  // Complete the multipart upload. After all the parts are uploaded issuing\n  // this call will aggregate the parts on the server into a single object.\n  completeMultipartUpload(bucketName, objectName, uploadId, etags, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(uploadId)) {\n      throw new TypeError('uploadId should be of type \"string\"')\n    }\n    if (!isObject(etags)) {\n      throw new TypeError('etags should be of type \"Array\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n\n    if (!uploadId) {\n      throw new errors.InvalidArgumentError('uploadId cannot be empty')\n    }\n\n    var method = 'POST'\n    var query = `uploadId=${uriEscape(uploadId)}`\n\n    var parts = []\n\n    etags.forEach(element => {\n      parts.push({\n        Part: [{\n          PartNumber: element.part\n        }, {\n          ETag: element.etag\n        }]\n      })\n    })\n\n    var payloadObject = {CompleteMultipartUpload: parts}\n    var payload = Xml(payloadObject)\n\n    this.makeRequest({method, bucketName, objectName, query}, payload, 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getCompleteMultipartTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', result => {\n          if (result.errCode) {\n            // Multipart Complete API returns an error XML after a 200 http status\n            cb(new errors.S3Error(result.errMessage))\n          } else {\n            cb(null, result.etag)\n          }\n        })\n    })\n  }\n\n  // Get part-info of all parts of an incomplete upload specified by uploadId.\n  listParts(bucketName, objectName, uploadId, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(uploadId)) {\n      throw new TypeError('uploadId should be of type \"string\"')\n    }\n    if (!uploadId) {\n      throw new errors.InvalidArgumentError('uploadId cannot be empty')\n    }\n    var parts = []\n    var listNext = (marker) => {\n      this.listPartsQuery(bucketName, objectName, uploadId, marker, (e, result) => {\n        if (e) {\n          cb(e)\n          return\n        }\n        parts = parts.concat(result.parts)\n        if (result.isTruncated) {\n          listNext(result.marker)\n          return\n        }\n        cb(null, parts)\n      })\n    }\n    listNext(0)\n  }\n\n  // Called by listParts to fetch a batch of part-info\n  listPartsQuery(bucketName, objectName, uploadId, marker, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(uploadId)) {\n      throw new TypeError('uploadId should be of type \"string\"')\n    }\n    if (!isNumber(marker)) {\n      throw new TypeError('marker should be of type \"number\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    if (!uploadId) {\n      throw new errors.InvalidArgumentError('uploadId cannot be empty')\n    }\n    var query = ''\n    if (marker && marker !== 0) {\n      query += `part-number-marker=${marker}&`\n    }\n    query += `uploadId=${uriEscape(uploadId)}`\n\n    var method = 'GET'\n    this.makeRequest({method, bucketName, objectName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getListPartsTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', data => cb(null, data))\n    })\n  }\n\n  // Called by listIncompleteUploads to fetch a batch of incomplete uploads.\n  listIncompleteUploadsQuery(bucketName, prefix, keyMarker, uploadIdMarker, delimiter) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isString(keyMarker)) {\n      throw new TypeError('keyMarker should be of type \"string\"')\n    }\n    if (!isString(uploadIdMarker)) {\n      throw new TypeError('uploadIdMarker should be of type \"string\"')\n    }\n    if (!isString(delimiter)) {\n      throw new TypeError('delimiter should be of type \"string\"')\n    }\n    var queries = []\n    if (prefix) {\n      queries.push(`prefix=${uriEscape(prefix)}`)\n    }\n    if (keyMarker) {\n      keyMarker = uriEscape(keyMarker)\n      queries.push(`key-marker=${keyMarker}`)\n    }\n    if (uploadIdMarker) {\n      queries.push(`upload-id-marker=${uploadIdMarker}`)\n    }\n    if (delimiter) {\n      queries.push(`delimiter=${uriEscape(delimiter)}`)\n    }\n    var maxUploads = 1000\n    queries.push(`max-uploads=${maxUploads}`)\n    queries.sort()\n    queries.unshift('uploads')\n    var query = ''\n    if (queries.length > 0) {\n      query = `${queries.join('&')}`\n    }\n    var method = 'GET'\n    var transformer = transformers.getListMultipartTransformer()\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return transformer.emit('error', e)\n      pipesetup(response, transformer)\n    })\n    return transformer\n  }\n\n  // Find uploadId of an incomplete upload.\n  findUploadId(bucketName, objectName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n    var latestUpload\n    var listNext = (keyMarker, uploadIdMarker) => {\n      this.listIncompleteUploadsQuery(bucketName, objectName, keyMarker, uploadIdMarker, '')\n        .on('error', e => cb(e))\n        .on('data', result => {\n          result.uploads.forEach(upload => {\n            if (upload.key === objectName) {\n              if (!latestUpload ||\n                (upload.initiated.getTime() > latestUpload.initiated.getTime())) {\n                latestUpload = upload\n                return\n              }\n            }\n          })\n          if (result.isTruncated) {\n            listNext(result.nextKeyMarker, result.nextUploadIdMarker)\n            return\n          }\n          if (latestUpload) return cb(null, latestUpload.uploadId)\n          cb(null, undefined)\n        })\n    }\n    listNext('', '')\n  }\n\n  // Returns a function that can be used for uploading objects.\n  // If multipart === true, it returns function that is used to upload\n  // a part of the multipart.\n  getUploader(bucketName, objectName, metaData, multipart) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isBoolean(multipart)) {\n      throw new TypeError('multipart should be of type \"boolean\"')\n    }\n    if (!isObject(metaData)) {\n      throw new TypeError('metadata should be of type \"object\"')\n    }\n\n    var validate = (stream, length, sha256sum, md5sum, cb) => {\n      if (!isReadableStream(stream)) {\n        throw new TypeError('stream should be of type \"Stream\"')\n      }\n      if (!isNumber(length)) {\n        throw new TypeError('length should be of type \"number\"')\n      }\n      if (!isString(sha256sum)) {\n        throw new TypeError('sha256sum should be of type \"string\"')\n      }\n      if (!isString(md5sum)) {\n        throw new TypeError('md5sum should be of type \"string\"')\n      }\n      if (!isFunction(cb)) {\n        throw new TypeError('callback should be of type \"function\"')\n      }\n    }\n    var simpleUploader = (...args) => {\n      validate(...args)\n      var query = ''\n      upload(query, ...args)\n    }\n    var multipartUploader = (uploadId, partNumber, ...rest) => {\n      if (!isString(uploadId)) {\n        throw new TypeError('uploadId should be of type \"string\"')\n      }\n      if (!isNumber(partNumber)) {\n        throw new TypeError('partNumber should be of type \"number\"')\n      }\n      if (!uploadId) {\n        throw new errors.InvalidArgumentError('Empty uploadId')\n      }\n      if (!partNumber) {\n        throw new errors.InvalidArgumentError('partNumber cannot be 0')\n      }\n      validate(...rest)\n      var query = `partNumber=${partNumber}&uploadId=${uriEscape(uploadId)}`\n      upload(query, ...rest)\n    }\n    var upload = (query, stream, length, sha256sum, md5sum, cb) => {\n      var method = 'PUT'\n      let headers = {'Content-Length': length}\n\n      if (!multipart) {\n        headers = Object.assign({}, metaData, headers)\n      }\n\n      if (!this.enableSHA256) headers['Content-MD5'] = md5sum\n      this.makeRequestStream({method, bucketName, objectName, query, headers},\n                             stream, sha256sum, 200, '', true, (e, response) => {\n                               if (e) return cb(e)\n                               var etag = response.headers.etag\n                               if (etag) {\n                                 etag = etag.replace(/^\"/, '').replace(/\"$/, '')\n                               }\n                               // Ignore the 'data' event so that the stream closes. (nodejs stream requirement)\n                               response.on('data', () => {})\n                               cb(null, etag)\n                             })\n    }\n    if (multipart) {\n      return multipartUploader\n    }\n    return simpleUploader\n  }\n\n  // Remove all the notification configurations in the S3 provider\n  setBucketNotification(bucketName, config, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isObject(config)) {\n      throw new TypeError('notification config should be of type \"Object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'PUT'\n    var query = 'notification'\n    var builder = new xml2js.Builder({rootName:'NotificationConfiguration', renderOpts:{'pretty':false}, headless:true})\n    var payload = builder.buildObject(config)\n    this.makeRequest({method, bucketName, query}, payload, 200, '', false, cb)\n  }\n\n  removeAllBucketNotification(bucketName, cb) {\n    this.setBucketNotification(bucketName, new NotificationConfig(), cb)\n  }\n\n  // Return the list of notification configurations stored\n  // in the S3 provider\n  getBucketNotification(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'GET'\n    var query = 'notification'\n    this.makeRequest({method, bucketName, query}, '', 200, '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getBucketNotificationTransformer()\n      var bucketNotification\n      pipesetup(response, transformer)\n        .on('data', result => bucketNotification = result)\n        .on('error', e => cb(e))\n        .on('end', () => cb(null, bucketNotification))\n    })\n  }\n\n  // Listens for bucket notifications. Returns an EventEmitter.\n  listenBucketNotification(bucketName, prefix, suffix, events) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name: ${bucketName}`)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix must be of type string')\n    }\n    if (!isString(suffix)) {\n      throw new TypeError('suffix must be of type string')\n    }\n    if (!isArray(events)) {\n      throw new TypeError('events must be of type Array')\n    }\n    let listener = new NotificationPoller(this, bucketName, prefix, suffix, events)\n    listener.start()\n\n    return listener\n  }\n}\n\n// Promisify various public-facing APIs on the Client module.\nClient.prototype.makeBucket = promisify(Client.prototype.makeBucket)\nClient.prototype.listBuckets = promisify(Client.prototype.listBuckets)\nClient.prototype.bucketExists = promisify(Client.prototype.bucketExists)\nClient.prototype.removeBucket = promisify(Client.prototype.removeBucket)\n\nClient.prototype.getObject = promisify(Client.prototype.getObject)\nClient.prototype.getPartialObject = promisify(Client.prototype.getPartialObject)\nClient.prototype.fGetObject = promisify(Client.prototype.fGetObject)\nClient.prototype.putObject = promisify(Client.prototype.putObject)\nClient.prototype.fPutObject = promisify(Client.prototype.fPutObject)\nClient.prototype.copyObject = promisify(Client.prototype.copyObject)\nClient.prototype.statObject = promisify(Client.prototype.statObject)\nClient.prototype.removeObject = promisify(Client.prototype.removeObject)\nClient.prototype.removeObjects = promisify(Client.prototype.removeObjects)\n\nClient.prototype.presignedGetObject = promisify(Client.prototype.presignedGetObject)\nClient.prototype.presignedPutObject = promisify(Client.prototype.presignedPutObject)\nClient.prototype.presignedPostPolicy = promisify(Client.prototype.presignedPostPolicy)\nClient.prototype.getBucketNotification = promisify(Client.prototype.getBucketNotification)\nClient.prototype.setBucketNotification = promisify(Client.prototype.setBucketNotification)\nClient.prototype.removeAllBucketNotification = promisify(Client.prototype.removeAllBucketNotification)\nClient.prototype.getBucketPolicy = promisify(Client.prototype.getBucketPolicy)\nClient.prototype.setBucketPolicy = promisify(Client.prototype.setBucketPolicy)\nClient.prototype.removeIncompleteUpload = promisify(Client.prototype.removeIncompleteUpload)\n\n\nexport class CopyConditions {\n  constructor() {\n    this.modified = \"\"\n    this.unmodified = \"\"\n    this.matchETag = \"\"\n    this.matchETagExcept = \"\"\n  }\n\n  setModified(date) {\n    if (!(date instanceof Date))\n      throw new TypeError('date must be of type Date')\n\n    this.modified = date.toUTCString()\n  }\n\n  setUnmodified(date) {\n    if (!(date instanceof Date))\n      throw new TypeError('date must be of type Date')\n\n    this.unmodified = date.toUTCString()\n  }\n\n  setMatchETag(etag) {\n    this.matchETag = etag\n  }\n\n  setMatchETagExcept(etag) {\n    this.matchETagExcept = etag\n  }\n}\n\n// Build PostPolicy object that can be signed by presignedPostPolicy\nexport class PostPolicy {\n  constructor() {\n    this.policy = {\n      conditions: []\n    }\n    this.formData = {}\n  }\n\n  // set expiration date\n  setExpires(date) {\n    if (!date) {\n      throw new errors.InvalidDateError('Invalid date : cannot be null')\n    }\n    this.policy.expiration = date.toISOString()\n  }\n\n  // set object name\n  setKey(objectName) {\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name : ${objectName}`)\n    }\n    this.policy.conditions.push(['eq', '$key', objectName])\n    this.formData.key = objectName\n  }\n\n  // set object name prefix, i.e policy allows any keys with this prefix\n  setKeyStartsWith(prefix) {\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    this.policy.conditions.push(['starts-with', '$key', prefix])\n    this.formData.key = prefix\n  }\n\n  // set bucket name\n  setBucket(bucketName) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name : ${bucketName}`)\n    }\n    this.policy.conditions.push(['eq', '$bucket', bucketName])\n    this.formData.bucket = bucketName\n  }\n\n  // set Content-Type\n  setContentType(type) {\n    if (!type) {\n      throw new Error('content-type cannot be null')\n    }\n    this.policy.conditions.push(['eq', '$Content-Type', type])\n    this.formData['Content-Type'] = type\n  }\n\n  // set minimum/maximum length of what Content-Length can be.\n  setContentLengthRange(min, max) {\n    if (min > max) {\n      throw new Error('min cannot be more than max')\n    }\n    if (min < 0) {\n      throw new Error('min should be > 0')\n    }\n    if (max < 0) {\n      throw new Error('max should be > 0')\n    }\n    this.policy.conditions.push(['content-length-range', min, max])\n  }\n}\n\nexport * from './notification'\n"]}