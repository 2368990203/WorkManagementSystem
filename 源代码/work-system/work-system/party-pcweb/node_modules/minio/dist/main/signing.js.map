{"version":3,"sources":["signing.js"],"names":[],"mappings":"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","file":"signing.js","sourcesContent":["/*\n * Minio Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2016 Minio, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Crypto from 'crypto'\nimport _ from 'lodash'\nimport { uriEscape, getScope, isString, isObject, isArray, isNumber,\n  makeDateShort, makeDateLong } from './helpers.js'\nimport * as errors from './errors.js'\n\nconst signV4Algorithm = 'AWS4-HMAC-SHA256'\n\n// getCanonicalRequest generate a canonical request of style.\n//\n// canonicalRequest =\n//  <HTTPMethod>\\n\n//  <CanonicalURI>\\n\n//  <CanonicalQueryString>\\n\n//  <CanonicalHeaders>\\n\n//  <SignedHeaders>\\n\n//  <HashedPayload>\n//\nfunction getCanonicalRequest(method, path, headers, signedHeaders, hashedPayload) {\n  if (!isString(method)) {\n    throw new TypeError('method should be of type \"string\"')\n  }\n  if (!isString(path)) {\n    throw new TypeError('path should be of type \"string\"')\n  }\n  if (!isObject(headers)) {\n    throw new TypeError('headers should be of type \"object\"')\n  }\n  if (!isArray(signedHeaders)) {\n    throw new TypeError('signedHeaders should be of type \"array\"')\n  }\n  if (!isString(hashedPayload)) {\n    throw new TypeError('hashedPayload should be of type \"string\"')\n  }\n  var headersArray = signedHeaders.reduce((acc, i) => {\n    acc.push(`${i.toLowerCase()}:${headers[i]}`)\n    return acc\n  }, [])\n\n  var requestResource = path.split('?')[0]\n  var requestQuery = path.split('?')[1]\n  if (!requestQuery) requestQuery = ''\n\n  if (requestQuery) {\n    requestQuery = requestQuery\n      .split('&')\n      .sort()\n      .map(element => element.indexOf('=') === -1 ? element + '=' : element)\n      .join('&')\n  }\n\n  var canonical = []\n  canonical.push(method.toUpperCase())\n  canonical.push(requestResource)\n  canonical.push(requestQuery)\n  canonical.push(headersArray.join('\\n') + '\\n')\n  canonical.push(signedHeaders.join(';').toLowerCase())\n  canonical.push(hashedPayload)\n  return canonical.join('\\n')\n}\n\n// generate a credential string\nfunction getCredential(accessKey, region, requestDate) {\n  if (!isString(accessKey)) {\n    throw new TypeError('accessKey should be of type \"string\"')\n  }\n  if (!isString(region)) {\n    throw new TypeError('region should be of type \"string\"')\n  }\n  if (!isObject(requestDate)) {\n    throw new TypeError('requestDate should be of type \"object\"')\n  }\n  return `${accessKey}/${getScope(region, requestDate)}`\n}\n\n// Returns signed headers array - alphabetically sorted\nfunction getSignedHeaders(headers) {\n  if (!isObject(headers)) {\n    throw new TypeError('request should be of type \"object\"')\n  }\n  // Excerpts from @lsegal - https://github.com/aws/aws-sdk-js/issues/659#issuecomment-120477258\n  //\n  //  User-Agent:\n  //\n  //      This is ignored from signing because signing this causes problems with generating pre-signed URLs\n  //      (that are executed by other agents) or when customers pass requests through proxies, which may\n  //      modify the user-agent.\n  //\n  //  Content-Length:\n  //\n  //      This is ignored from signing because generating a pre-signed URL should not provide a content-length\n  //      constraint, specifically when vending a S3 pre-signed PUT URL. The corollary to this is that when\n  //      sending regular requests (non-pre-signed), the signature contains a checksum of the body, which\n  //      implicitly validates the payload length (since changing the number of bytes would change the checksum)\n  //      and therefore this header is not valuable in the signature.\n  //\n  //  Content-Type:\n  //\n  //      Signing this header causes quite a number of problems in browser environments, where browsers\n  //      like to modify and normalize the content-type header in different ways. There is more information\n  //      on this in https://github.com/aws/aws-sdk-js/issues/244. Avoiding this field simplifies logic\n  //      and reduces the possibility of future bugs\n  //\n  //  Authorization:\n  //\n  //      Is skipped for obvious reasons\n\n  var ignoredHeaders = ['authorization', 'content-length', 'content-type', 'user-agent']\n  return _.map(headers, (v, header) => header)\n    .filter(header => ignoredHeaders.indexOf(header) === -1)\n    .sort()\n}\n\n// returns the key used for calculating signature\nfunction getSigningKey(date, region, secretKey) {\n  if (!isObject(date)) {\n    throw new TypeError('date should be of type \"object\"')\n  }\n  if (!isString(region)) {\n    throw new TypeError('region should be of type \"string\"')\n  }\n  if (!isString(secretKey)) {\n    throw new TypeError('secretKey should be of type \"string\"')\n  }\n  var dateLine = makeDateShort(date),\n    hmac1 = Crypto.createHmac('sha256', 'AWS4' + secretKey).update(dateLine).digest(),\n    hmac2 = Crypto.createHmac('sha256', hmac1).update(region).digest(),\n    hmac3 = Crypto.createHmac('sha256', hmac2).update('s3').digest()\n  return Crypto.createHmac('sha256', hmac3).update('aws4_request').digest()\n}\n\n// returns the string that needs to be signed\nfunction getStringToSign(canonicalRequest, requestDate, region) {\n  if (!isString(canonicalRequest)) {\n    throw new TypeError('canonicalRequest should be of type \"string\"')\n  }\n  if (!isObject(requestDate)) {\n    throw new TypeError('requestDate should be of type \"object\"')\n  }\n  if (!isString(region)) {\n    throw new TypeError('region should be of type \"string\"')\n  }\n  var hash = Crypto.createHash('sha256').update(canonicalRequest).digest('hex')\n  var scope = getScope(region, requestDate)\n  var stringToSign = []\n  stringToSign.push(signV4Algorithm)\n  stringToSign.push(makeDateLong(requestDate))\n  stringToSign.push(scope)\n  stringToSign.push(hash)\n  return stringToSign.join('\\n')\n}\n\n// calculate the signature of the POST policy\nexport function postPresignSignatureV4(region, date, secretKey, policyBase64) {\n  if (!isString(region)) {\n    throw new TypeError('region should be of type \"string\"')\n  }\n  if (!isObject(date)) {\n    throw new TypeError('date should be of type \"object\"')\n  }\n  if (!isString(secretKey)) {\n    throw new TypeError('secretKey should be of type \"string\"')\n  }\n  if (!isString(policyBase64)) {\n    throw new TypeError('policyBase64 should be of type \"string\"')\n  }\n  var signingKey = getSigningKey(date, region, secretKey)\n  return Crypto.createHmac('sha256', signingKey).update(policyBase64).digest('hex').toLowerCase()\n}\n\n// Returns the authorization header\nexport function signV4(request, accessKey, secretKey, region, requestDate) {\n  if (!isObject(request)) {\n    throw new TypeError('request should be of type \"object\"')\n  }\n  if (!isString(accessKey)) {\n    throw new TypeError('accessKey should be of type \"string\"')\n  }\n  if (!isString(secretKey)) {\n    throw new TypeError('secretKey should be of type \"string\"')\n  }\n  if (!isString(region)) {\n    throw new TypeError('region should be of type \"string\"')\n  }\n\n  if (!accessKey) {\n    throw new errors.AccessKeyRequiredError('accessKey is required for signing')\n  }\n  if (!secretKey) {\n    throw new errors.SecretKeyRequiredError('secretKey is required for signing')\n  }\n\n  var sha256sum = request.headers['x-amz-content-sha256']\n\n  var signedHeaders = getSignedHeaders(request.headers)\n  var canonicalRequest = getCanonicalRequest(request.method, request.path, request.headers,\n                                             signedHeaders, sha256sum)\n  var stringToSign = getStringToSign(canonicalRequest, requestDate, region)\n  var signingKey = getSigningKey(requestDate, region, secretKey)\n  var credential = getCredential(accessKey, region, requestDate)\n  var signature = Crypto.createHmac('sha256', signingKey).update(stringToSign).digest('hex').toLowerCase()\n\n  return `${signV4Algorithm} Credential=${credential}, SignedHeaders=${signedHeaders.join(';').toLowerCase()}, Signature=${signature}`\n}\n\n// returns a presigned URL string\nexport function presignSignatureV4(request, accessKey, secretKey, region, requestDate, expires) {\n  if (!isObject(request)) {\n    throw new TypeError('request should be of type \"object\"')\n  }\n  if (!isString(accessKey)) {\n    throw new TypeError('accessKey should be of type \"string\"')\n  }\n  if (!isString(secretKey)) {\n    throw new TypeError('secretKey should be of type \"string\"')\n  }\n  if (!isString(region)) {\n    throw new TypeError('region should be of type \"string\"')\n  }\n\n  if (!accessKey) {\n    throw new errors.AccessKeyRequiredError('accessKey is required for presigning')\n  }\n  if (!secretKey) {\n    throw new errors.SecretKeyRequiredError('secretKey is required for presigning')\n  }\n\n  if (!isNumber(expires)) {\n    throw new TypeError('expires should be of type \"number\"')\n  }\n  if (expires < 1) {\n    throw new errors.ExpiresParamError('expires param cannot be less than 1 seconds')\n  }\n  if (expires > 604800) {\n    throw new errors.ExpiresParamError('expires param cannot be greater than 7 days')\n  }\n\n  var iso8601Date = makeDateLong(requestDate)\n  var signedHeaders = getSignedHeaders(request.headers)\n  var credential = getCredential(accessKey, region, requestDate)\n  var hashedPayload = 'UNSIGNED-PAYLOAD'\n\n  var requestQuery = []\n  requestQuery.push(`X-Amz-Algorithm=${signV4Algorithm}`)\n  requestQuery.push(`X-Amz-Credential=${uriEscape(credential)}`)\n  requestQuery.push(`X-Amz-Date=${iso8601Date}`)\n  requestQuery.push(`X-Amz-Expires=${expires}`)\n  requestQuery.push(`X-Amz-SignedHeaders=${uriEscape(signedHeaders.join(';').toLowerCase())}`)\n\n  var resource = request.path.split('?')[0]\n  var query = request.path.split('?')[1]\n  if (query) {\n    query = query + '&' + requestQuery.join('&')\n  } else {\n    query = requestQuery.join('&')\n  }\n\n  var path = resource + '?' + query\n\n  var canonicalRequest = getCanonicalRequest(request.method, path,\n                                             request.headers, signedHeaders, hashedPayload)\n\n  var stringToSign = getStringToSign(canonicalRequest, requestDate, region)\n  var signingKey = getSigningKey(requestDate, region, secretKey)\n  var signature = Crypto.createHmac('sha256', signingKey).update(stringToSign).digest('hex').toLowerCase()\n  var presignedUrl = request.protocol + '//' + request.headers.host + path + `&X-Amz-Signature=${signature}`\n  return presignedUrl\n}\n"]}