{"version":3,"sources":["errors.js"],"names":[],"mappings":"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","file":"errors.js","sourcesContent":["/*\n * Minio Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2015 Minio, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ExtendableError from 'es6-error'\n\n// AnonymousRequestError is generated for anonymous keys on specific\n// APIs. NOTE: PresignedURL generation always requires access keys.\nexport class AnonymousRequestError extends ExtendableError {\n  constructor(message) {\n    super(message)\n  }\n}\n\n// InvalidArgumentError is generated for all invalid arguments.\nexport class InvalidArgumentError extends ExtendableError {\n  constructor(message) {\n    super(message)\n  }\n}\n\n// InvalidPortError is generated when a non integer value is provided\n// for ports.\nexport class InvalidPortError extends ExtendableError {\n  constructor(message) {\n    super(message)\n  }\n}\n\n// InvalidEndpointError is generated when an invalid end point value is\n// provided which does not follow domain standards.\nexport class InvalidEndpointError extends ExtendableError {\n  constructor(message) {\n    super(message)\n  }\n}\n\n// InvalidBucketNameError is generated when an invalid bucket name is\n// provided which does not follow AWS S3 specifications.\n// http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\nexport class InvalidBucketNameError extends ExtendableError {\n  constructor(message) {\n    super(message)\n  }\n}\n\n// InvalidObjectNameError is generated when an invalid object name is\n// provided which does not follow AWS S3 specifications.\n// http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html\nexport class InvalidObjectNameError extends ExtendableError {\n  constructor(message) {\n    super(message)\n  }\n}\n\n// AccessKeyRequiredError generated by signature methods when access\n// key is not found.\nexport class AccessKeyRequiredError extends ExtendableError {\n  constructor(message) {\n    super(message)\n  }\n}\n\n// SecretKeyRequiredError generated by signature methods when secret\n// key is not found.\nexport class SecretKeyRequiredError extends ExtendableError {\n  constructor(message) {\n    super(message)\n  }\n}\n\n// ExpiresParamError generated when expires parameter value is not\n// well within stipulated limits.\nexport class ExpiresParamError extends ExtendableError {\n  constructor(message) {\n    super(message)\n  }\n}\n\n// InvalidDateError generated when invalid date is found.\nexport class InvalidDateError extends ExtendableError {\n  constructor(message) {\n    super(message)\n  }\n}\n\n// InvalidPrefixError generated when object prefix provided is invalid\n// or does not conform to AWS S3 object key restrictions.\nexport class InvalidPrefixError extends ExtendableError {\n  constructor(message) {\n    super(message)\n  }\n}\n\n// InvalidBucketPolicyError generated when the given bucket policy is invalid.\nexport class InvalidBucketPolicyError extends ExtendableError {\n  constructor(message) {\n    super(message)\n  }\n}\n\n// IncorrectSizeError generated when total data read mismatches with\n// the input size.\nexport class IncorrectSizeError extends ExtendableError {\n  constructor(message) {\n    super(message)\n  }\n}\n\n// InvalidXMLError generated when an unknown XML is found.\nexport class InvalidXMLError extends ExtendableError {\n  constructor(message) {\n    super(message)\n  }\n}\n\n// S3Error is generated for errors returned from S3 server.\n// see getErrorTransformer for details\nexport class S3Error extends ExtendableError {\n  constructor(message) {\n    super(message)\n  }\n}\n"]}